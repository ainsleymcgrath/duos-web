# Generated by Django 2.1.1 on 2018-09-25 01:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('articleid', models.IntegerField(primary_key=True, serialize=False)),
                ('articletitle', models.CharField(blank=True, max_length=255, null=True)),
                ('articleyear', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('authorid', models.AutoField(primary_key=True, serialize=False)),
                ('authorname', models.CharField(blank=True, max_length=255, null=True)),
                ('authoremail', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'author',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Divvytrips',
            fields=[
                ('trip_id', models.IntegerField(primary_key=True, serialize=False)),
                ('starttime', models.DateTimeField(blank=True, null=True)),
                ('stoptime', models.DateTimeField(blank=True, null=True)),
                ('bikeid', models.IntegerField(blank=True, null=True)),
                ('tripduration', models.IntegerField(blank=True, null=True)),
                ('from_station_id', models.IntegerField(blank=True, null=True)),
                ('from_station_name', models.CharField(blank=True, max_length=100, null=True)),
                ('to_station_id', models.IntegerField(blank=True, null=True)),
                ('to_station_name', models.CharField(blank=True, max_length=100, null=True)),
                ('usertype', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('birthyear', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'divvytrips',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Duosarticle',
            fields=[
                ('articleid', models.AutoField(primary_key=True, serialize=False)),
                ('articletitle', models.CharField(max_length=255)),
                ('articleyear', models.IntegerField()),
            ],
            options={
                'db_table': 'duosarticle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Duosauthor',
            fields=[
                ('emailaddress', models.CharField(max_length=255)),
                ('authorid', models.AutoField(primary_key=True, serialize=False)),
                ('authorname', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'duosauthor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Duosdataset',
            fields=[
                ('datasetid', models.AutoField(primary_key=True, serialize=False)),
                ('datasetname', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'duosdataset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Duosemail',
            fields=[
                ('hash', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('emailid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'duosemail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Duosreference',
            fields=[
                ('refid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'duosreference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Duosvalidation',
            fields=[
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('time_stamp', models.DateTimeField()),
                ('validationid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'duosvalidation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Duoswrites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'duoswrites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refs',
            fields=[
                ('refid', models.AutoField(primary_key=True, serialize=False)),
                ('objectlabel', models.CharField(blank=True, max_length=13, null=True)),
                ('datasetname', models.CharField(blank=True, max_length=255, null=True)),
                ('context', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'refs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Validates',
            fields=[
                ('validatesid', models.AutoField(primary_key=True, serialize=False)),
                ('validatestoken', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('createdat', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'validates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Validation',
            fields=[
                ('validationid', models.AutoField(primary_key=True, serialize=False)),
                ('validationchoice', models.CharField(blank=True, max_length=13, null=True)),
                ('validationcomment', models.TextField(blank=True, null=True)),
                ('updatedat', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'validation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Writes',
            fields=[
                ('writesid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'writes',
                'managed': False,
            },
        ),
    ]
